name: MQTT Publish on Commit

on:
  push:
    branches:
      - master  # Monitor commits on the 'master'

jobs:
  publish:
    runs-on: ubuntu-latest # Ubuntu machine for CI (continuous integration)

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y mosquitto-clients jq openssl libmbedtls-dev gcc

      - name: Extract Latest Firmware URL
        id: extract_url
        run: |
          URL=$(jq -r '.firmware_versions[0].url' versions.json)
          echo "URL=$URL" >> $GITHUB_ENV

      - name: Apply PKCS#7 Padding to URL
        id: apply_padding
        run: |
          URL_LENGTH=${#URL}
          BLOCK_SIZE=16
          PADDING=$((BLOCK_SIZE - (URL_LENGTH % BLOCK_SIZE)))
          PADDED_URL="$URL$(printf "%0.s$(printf '\x%02x' "$PADDING")" $(seq 1 $PADDING))"
          echo "PADDED_URL=$PADDED_URL" >> $GITHUB_ENV

      - name: Encrypt the Padded URL using AES
        id: encrypt_padded_url
        env:
          AES_KEY: ${{ secrets.AES_KEY }}
          AES_IV: ${{ secrets.AES_IV }}
          PADDED_URL: ${{ env.PADDED_URL }}
        run: |
          echo -n "$PADDED_URL" | openssl enc -aes-128-cbc -K $(echo -n $AES_KEY | xxd -p) -iv $(echo -n $AES_IV | xxd -p) -out encrypted_url.bin
          ENCRYPTED_URL_HEX=$(xxd -p encrypted_url.bin | tr -d '\n')
          echo "ENCRYPTED_URL_HEX=$ENCRYPTED_URL_HEX" >> $GITHUB_ENV

      - name: Generate HMAC using mbedTLS
        run: |
          # Create HMAC program
          cat <<EOF > hmac_mbedtls.c
          #include "mbedtls/md.h"
          #include <stdio.h>
          #include <string.h>

          void compute_hmac(const char *key, const char *message) {
              unsigned char output[32]; // SHA-256 produces a 32-byte hash
              mbedtls_md_context_t ctx;
              mbedtls_md_type_t md_type = MBEDTLS_MD_SHA256;

              const mbedtls_md_info_t *md_info = mbedtls_md_info_from_type(md_type);
              mbedtls_md_init(&ctx);

              if (mbedtls_md_setup(&ctx, md_info, 1) != 0) {
                  printf("HMAC setup failed\n");
                  return;
              }

              mbedtls_md_hmac_starts(&ctx, (const unsigned char *)key, strlen(key));
              mbedtls_md_hmac_update(&ctx, (const unsigned char *)message, strlen(message));
              mbedtls_md_hmac_finish(&ctx, output);

              printf("HMAC: ");
              for (int i = 0; i < 32; i++) {
                  printf("%02x", output[i]);
              }
              printf("\n");

              mbedtls_md_free(&ctx);
          }

          int main(int argc, char *argv[]) {
              if (argc != 3) {
                  printf("Usage: %s <key> <message>\n", argv[0]);
                  return 1;
              }

              compute_hmac(argv[1], argv[2]);
              return 0;
          }
          EOF

          # Compile the HMAC program
          gcc -o hmac_mbedtls hmac_mbedtls.c -lmbedtls -lmbedcrypto -lmbedx509

          # Run the HMAC program
          HMAC_OUTPUT=$(./hmac_mbedtls "${{ secrets.AES_KEY }}" "${{ env.ENCRYPTED_URL_HEX }}" | grep -oE "[a-f0-9]{64}")
          echo "HMAC=$HMAC_OUTPUT" >> $GITHUB_ENV

      - name: Publish Encrypted URL and MAC to MQTT Topic
        run: |
          mosquitto_pub -h test.mosquitto.org -t "inTopic" -m "$ENCRYPTED_URL_HEX"
          mosquitto_pub -h test.mosquitto.org -t "esp32/mac" -m "$HMAC"
